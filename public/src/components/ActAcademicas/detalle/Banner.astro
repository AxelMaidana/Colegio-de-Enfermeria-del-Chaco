---
// Importa los modales
import ModalNoLogin from '../../modales/NoLogin.astro';
import ModalLogin from '../../modales/Login.astro';
import ModalRegistro from '../../modales/Registro.astro';
import ModalInscripcionExitosa from '../../modales/InscripcionExitosa.astro';

const { title, image, price, modality, duration, description } = Astro.props;
---

<div class="bg-gray-100 mx-4 sm:mx-10 md:mx-20 lg:mx-32 xl:mx-52 rounded-3xl overflow-hidden">
  <div class="relative w-auto md:h-[600px] overflow-hidden">
    <img src={image} alt={`Imagen de ${title}`} class="w-full h-full object-cover" />
    <div class="absolute inset-0 bg-gradient-to-b from-transparent to-white"></div>
  </div>

  <div class="bg-white p-4 relative">
    <div class="relative z-10">
      <h1 class="md:text-7xl text-5xl font-bold mb-2">{title}</h1>
      <div class="flex flex-wrap gap-8 my-6">
        <div>
          <button id="inscribirme-btn" class="bg-customBlue hover:scale-105 transition duration-300 ease-in-out text-white px-10 py-3 rounded-xl text-xl font-semibold">
            Inscribirme Ahora
          </button>
        </div>
        <div class="flex flex-wrap gap-3 md:justify-end items-center">
          <span class="text-customCyan px-3 py-1 border-solid border-2 border-customCyan rounded-lg text-lg font-semibold">{price}</span>
          <span class="text-customCyan px-3 py-1 border-solid border-2 border-customCyan rounded-lg text-lg font-semibold">{modality}</span>
          <span class="text-customCyan px-3 py-1 border-solid border-2 border-customCyan rounded-lg text-lg font-semibold">{duration}</span>
        </div>
      </div>
      <p class="text-lg font-normal text-gray-600">{description}</p>
    </div>
  </div>

  {/* Aquí insertas los modales */}
  <ModalNoLogin />
  <ModalLogin />
  <ModalRegistro />
  <ModalInscripcionExitosa />
</div>


<script>
   // Función para abrir el modal principal
   document.getElementById('inscribirme-btn').addEventListener('click', () => {
    const modal = document.getElementById('modal');
    modal.classList.remove('hidden');
    modal.classList.remove('opacity-0', 'pointer-events-none'); // Remueve la opacidad y eventos
    modal.classList.add('opacity-100'); // Agrega opacidad total para mostrar el modal
    setTimeout(() => {
      modal.querySelector('div').classList.remove('scale-95', 'translate-y-4'); // Elimina las transformaciones para la entrada
    }, 100); // Pequeño retraso para que las clases se apliquen correctamente
  });

  // Abrir el modal de inicio de sesión
  document.getElementById('login-btn').addEventListener('click', () => {
    const modal = document.getElementById('modal');
    const loginModal = document.getElementById('login-modal');
    closeModal(); // Cierra el modal principal
    loginModal.classList.remove('hidden');
    loginModal.classList.remove('opacity-0', 'pointer-events-none');
    loginModal.classList.add('opacity-100');
    setTimeout(() => {
      loginModal.querySelector('div').classList.remove('scale-95', 'translate-y-4');
    }, 100);
  });

  // Cerrar el modal de inicio de sesión al hacer clic fuera de él
  document.getElementById('login-modal').addEventListener('click', (e) => {
    if (e.target === document.getElementById('login-modal')) {
      closeLoginModal();
    }
  });

  // Función para cerrar el modal principal
  function closeModal() {
    const modal = document.getElementById('modal');
    const modalContent = modal.querySelector('div');
    
    modalContent.classList.add('scale-95', 'translate-y-4'); // Agrega transformaciones para la salida
    modal.classList.add('opacity-0'); // Agrega opacidad cero para ocultar el modal
    modal.classList.add('pointer-events-none'); // Desactiva eventos mientras se oculta
    setTimeout(() => {
      modal.classList.add('hidden'); // Oculta el modal después de la transición
    },); // Debe coincidir con la duración de la transición
  }

  // Función para cerrar el modal de inicio de sesión
  function closeLoginModal() {
    const loginModal = document.getElementById('login-modal');
    loginModal.querySelector('div').classList.add('scale-95', 'translate-y-4');
    loginModal.classList.add('opacity-0');
    loginModal.classList.add('pointer-events-none');
    setTimeout(() => {
      loginModal.classList.add('hidden');
    },); // Debe coincidir con la duración de la transición
  }

  // Abrir el modal de registro desde el modal de inicio de sesión
  document.getElementById('register-link-2').addEventListener('click', (e) => {
    e.preventDefault(); // Previene la acción por defecto del enlace
    closeLoginModal(); // Cierra el modal de inicio de sesión
    const registerModal = document.getElementById('register-modal');
    registerModal.classList.remove('hidden');
    registerModal.classList.remove('opacity-0', 'pointer-events-none');
    registerModal.classList.add('opacity-100');
    setTimeout(() => {
      registerModal.querySelector('div').classList.remove('scale-95', 'translate-y-4');
    }, 100);
  });

  // Función para abrir el modal de registro
  document.getElementById('register-link').addEventListener('click', (e) => {
    e.preventDefault();
    document.getElementById('modal').classList.add('hidden');
    document.getElementById('register-modal').classList.remove('hidden');
    document.getElementById('register-modal').classList.remove('opacity-0', 'pointer-events-none'); 
    document.getElementById('register-modal').classList.add('opacity-100'); 
  });

  

  // Cerrar el modal de registro y mostrar modal de certificación completada
  document.getElementById('register-btn').addEventListener('click', (e) => {
    e.preventDefault();
    document.getElementById('register-modal').classList.add('hidden');
    document.getElementById('final-modal').classList.remove('hidden');
    document.getElementById('final-modal').classList.remove('opacity-0', 'pointer-events-none'); 
    document.getElementById('final-modal').classList.add('opacity-100'); 
  });

  // Cerrar el modal de certificación completada
  document.getElementById('close-final-btn').addEventListener('click', () => {
    document.getElementById('final-modal').classList.add('hidden');
  });

  // Cerrar los modales al hacer clic fuera de ellos
  const modals = document.querySelectorAll('.fixed');
  modals.forEach(modal => {
    modal.addEventListener('click', (e) => {
      if (e.target === modal) {
        modal.classList.add('hidden');
      }
    });
  });
</script>

<style>
  .hidden {
    display: none;
  }
</style>
